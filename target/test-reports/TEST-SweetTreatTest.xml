<?xml version='1.0' encoding='UTF-8'?>
<testsuite hostname="C02DR68XMD6R" name="SweetTreatTest" tests="14" errors="0" failures="1" skipped="0" time="2.152" timestamp="2021-06-24T16:39:33">
          <properties>
      <property name="java.specification.version" value="15"/><property name="sun.jnu.encoding" value="UTF-8"/><property name="sun.arch.data.model" value="64"/><property name="java.vendor.url" value="https://openjdk.java.net/"/><property name="sun.boot.library.path" value="/usr/local/Cellar/openjdk/15.0.2/libexec/openjdk.jdk/Contents/Home/lib"/><property name="sun.java.command" value="/usr/local/Cellar/sbt/1.5.2/libexec/bin/sbt-launch.jar test"/><property name="jdk.debug" value="release"/><property name="java.specification.vendor" value="Oracle Corporation"/><property name="java.version.date" value="2021-01-19"/><property name="java.home" value="/usr/local/Cellar/openjdk/15.0.2/libexec/openjdk.jdk/Contents/Home"/><property name="file.separator" value="/"/><property name="java.vm.compressedOopsMode" value="Zero based"/><property name="line.separator" value="
"/><property name="java.vm.specification.vendor" value="Oracle Corporation"/><property name="java.specification.name" value="Java Platform API Specification"/><property name="sun.management.compiler" value="HotSpot 64-Bit Tiered Compilers"/><property name="java.runtime.version" value="15.0.2+7"/><property name="user.name" value="ekipkalir"/><property name="log4j.ignoreTCL" value="true"/><property name="file.encoding" value="UTF-8"/><property name="jnidispatch.path" value="/Users/ekipkalir/Library/Caches/JNA/temp/jna16788639146033955574.tmp"/><property name="jna.loaded" value="true"/><property name="java.io.tmpdir" value="/var/folders/tr/phl6y4s91n15xyrmv78v30y40000gp/T/"/><property name="java.version" value="15.0.2"/><property name="java.vm.specification.name" value="Java Virtual Machine Specification"/><property name="java.library.path" value="/Users/ekipkalir/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:."/><property name="java.vendor" value="N/A"/><property name="scala.ext.dirs" value="/Users/ekipkalir/.sbt/1.0/java9-rt-ext-n_a_15_0_2"/><property name="sun.io.unicode.encoding" value="UnicodeBig"/><property name="socksNonProxyHosts" value="local|*.local|169.254/16|*.169.254/16"/><property name="java.class.path" value="/usr/local/Cellar/sbt/1.5.2/libexec/bin/sbt-launch.jar"/><property name="java.vm.vendor" value="Oracle Corporation"/><property name="jline.shutdownhook" value="false"/><property name="user.timezone" value="Europe/London"/><property name="java.vm.specification.version" value="15"/><property name="os.name" value="Mac OS X"/><property name="sun.java.launcher" value="SUN_STANDARD"/><property name="user.country" value="GB"/><property name="http.nonProxyHosts" value="local|*.local|169.254/16|*.169.254/16"/><property name="sun.cpu.endian" value="little"/><property name="user.home" value="/Users/ekipkalir"/><property name="user.language" value="en"/><property name="swoval.tmpdir" value="/Users/ekipkalir/.sbt/1.0"/><property name="jline.esc.timeout" value="0"/><property name="ftp.nonProxyHosts" value="local|*.local|169.254/16|*.169.254/16"/><property name="path.separator" value=":"/><property name="os.version" value="11.4"/><property name="jna.nosys" value="true"/><property name="java.runtime.name" value="OpenJDK Runtime Environment"/><property name="java.vm.name" value="OpenJDK 64-Bit Server VM"/><property name="jna.platform.library.path" value="/usr/lib:/usr/lib"/><property name="java.vendor.url.bug" value="https://bugreport.java.com/bugreport/"/><property name="user.dir" value="/Users/ekipkalir/00_EK_Capgemini_Business/scala_projects/03_sweet-treat-scala-project"/><property name="os.arch" value="x86_64"/><property name="java.vm.info" value="mixed mode, sharing"/><property name="java.vm.version" value="15.0.2+7"/><property name="java.class.version" value="59.0"/>
    </properties>
          <testcase classname="SweetTreatTest" name="checkCourierCriteria method in SweetTreat.scala should gives the valid couriers when all three methods are satisfied" time="1.342">
                      
                    </testcase><testcase classname="SweetTreatTest" name="checkCourierCriteria method in SweetTreat.scala should gives the invalid couriers when all three methods are not satisfied" time="0.075">
                      
                    </testcase><testcase classname="SweetTreatTest" name="availableCourier method in SweetTreat.scala should gives the valid range when the range is between 9-13 is true" time="0.06">
                      
                    </testcase><testcase classname="SweetTreatTest" name="availableCourier method in SweetTreat.scala should gives the invalid range when the range is not between 9-13 is false" time="0.069">
                      
                    </testcase><testcase classname="SweetTreatTest" name="availableDistance method in SweetTreat.scala should gives the valid distance when the distance is not more then 5 is true" time="0.069">
                      
                    </testcase><testcase classname="SweetTreatTest" name="availableDistance method in SweetTreat.scala should gives the invalid distance when the distance is greater then 5 is false" time="0.067">
                      
                    </testcase><testcase classname="SweetTreatTest" name="availableRefrigerator method in SweetTreat.scala should give the valid refrigerator when the Order.needRefrigerator is valid, returns true" time="0.066">
                      
                    </testcase><testcase classname="SweetTreatTest" name="availableRefrigerator method in SweetTreat.scala should is invalid refrigerator when the Order.needRefrigerator is not valid, returns false" time="0.066">
                      
                    </testcase><testcase classname="SweetTreatTest" name="smallestCost method in SweetTreat.scala should give the valid cost when the ListOfCourier is valid, returns Some(Courier)" time="0.065">
                      
                    </testcase><testcase classname="SweetTreatTest" name="smallestCost method in SweetTreat.scala should give the invalid cost when the ListOfCourier is not valid, returns None" time="0.056">
                      
                    </testcase><testcase classname="SweetTreatTest" name="selectTheCheapestCourier method in SweetTreat.scala should give the cheapest courier when the list of courier is equal or more than 1" time="0.064">
                      <failure message="Some(Courier(Geoff,List(10, 16),true,4.0,2.0,true)) was not equal to Some(Courier(Martin,List(9, 17),true,3.0,1.5,false))" type="org.scalatest.exceptions.TestFailedException">org.scalatest.exceptions.TestFailedException: Some(Courier(Geoff,List(10, 16),true,4.0,2.0,true)) was not equal to Some(Courier(Martin,List(9, 17),true,3.0,1.5,false))
	at org.scalatest.MatchersHelper$.indicateFailure(MatchersHelper.scala:343)
	at org.scalatest.MustMatchers$AnyMustWrapper.mustBe(MustMatchers.scala:6919)
	at SweetTreatTest.$anonfun$new$28(SweetTreatTest.scala:93)
	at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)
	at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)
	at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)
	at org.scalatest.Transformer.apply(Transformer.scala:22)
	at org.scalatest.Transformer.apply(Transformer.scala:20)
	at org.scalatest.WordSpecLike$$anon$3.apply(WordSpecLike.scala:1075)
	at org.scalatest.TestSuite.withFixture(TestSuite.scala:196)
	at org.scalatest.TestSuite.withFixture$(TestSuite.scala:195)
	at SweetTreatTest.org$scalatestplus$play$BaseOneAppPerTest$$super$withFixture(SweetTreatTest.scala:5)
	at org.scalatestplus.play.BaseOneAppPerTest.$anonfun$withFixture$1(BaseOneAppPerTest.scala:74)
	at play.api.test.PlayRunners.$anonfun$running$2(Helpers.scala:84)
	at play.api.test.PlayRunners.runSynchronized(Helpers.scala:59)
	at play.api.test.PlayRunners.runSynchronized$(Helpers.scala:53)
	at play.api.test.Helpers$.runSynchronized(Helpers.scala:666)
	at play.api.test.PlayRunners.running(Helpers.scala:82)
	at play.api.test.PlayRunners.running$(Helpers.scala:80)
	at play.api.test.Helpers$.running(Helpers.scala:666)
	at org.scalatestplus.play.BaseOneAppPerTest.withFixture(BaseOneAppPerTest.scala:74)
	at org.scalatestplus.play.BaseOneAppPerTest.withFixture$(BaseOneAppPerTest.scala:71)
	at SweetTreatTest.withFixture(SweetTreatTest.scala:5)
	at org.scalatest.WordSpecLike.invokeWithFixture$1(WordSpecLike.scala:1073)
	at org.scalatest.WordSpecLike.$anonfun$runTest$1(WordSpecLike.scala:1085)
	at org.scalatest.SuperEngine.runTestImpl(Engine.scala:286)
	at org.scalatest.WordSpecLike.runTest(WordSpecLike.scala:1085)
	at org.scalatest.WordSpecLike.runTest$(WordSpecLike.scala:1067)
	at org.scalatest.WordSpec.runTest(WordSpec.scala:1881)
	at org.scalatest.WordSpecLike.$anonfun$runTests$1(WordSpecLike.scala:1144)
	at org.scalatest.SuperEngine.$anonfun$runTestsInBranch$1(Engine.scala:393)
	at scala.collection.immutable.List.foreach(List.scala:333)
	at org.scalatest.SuperEngine.traverseSubNodes$1(Engine.scala:381)
	at org.scalatest.SuperEngine.runTestsInBranch(Engine.scala:370)
	at org.scalatest.SuperEngine.$anonfun$runTestsInBranch$1(Engine.scala:407)
	at scala.collection.immutable.List.foreach(List.scala:333)
	at org.scalatest.SuperEngine.traverseSubNodes$1(Engine.scala:381)
	at org.scalatest.SuperEngine.runTestsInBranch(Engine.scala:370)
	at org.scalatest.SuperEngine.$anonfun$runTestsInBranch$1(Engine.scala:407)
	at scala.collection.immutable.List.foreach(List.scala:333)
	at org.scalatest.SuperEngine.traverseSubNodes$1(Engine.scala:381)
	at org.scalatest.SuperEngine.runTestsInBranch(Engine.scala:376)
	at org.scalatest.SuperEngine.runTestsImpl(Engine.scala:458)
	at org.scalatest.WordSpecLike.runTests(WordSpecLike.scala:1144)
	at org.scalatest.WordSpecLike.runTests$(WordSpecLike.scala:1143)
	at org.scalatest.WordSpec.runTests(WordSpec.scala:1881)
	at org.scalatest.Suite.run(Suite.scala:1124)
	at org.scalatest.Suite.run$(Suite.scala:1106)
	at org.scalatest.WordSpec.org$scalatest$WordSpecLike$$super$run(WordSpec.scala:1881)
	at org.scalatest.WordSpecLike.$anonfun$run$1(WordSpecLike.scala:1189)
	at org.scalatest.SuperEngine.runImpl(Engine.scala:518)
	at org.scalatest.WordSpecLike.run(WordSpecLike.scala:1189)
	at org.scalatest.WordSpecLike.run$(WordSpecLike.scala:1187)
	at org.scalatest.WordSpec.run(WordSpec.scala:1881)
	at org.scalatest.tools.Framework.org$scalatest$tools$Framework$$runSuite(Framework.scala:317)
	at org.scalatest.tools.Framework$ScalaTestTask.execute(Framework.scala:510)
	at sbt.TestRunner.runTest$1(TestFramework.scala:140)
	at sbt.TestRunner.run(TestFramework.scala:155)
	at sbt.TestFramework$$anon$3$$anonfun$$lessinit$greater$1.$anonfun$apply$1(TestFramework.scala:318)
	at sbt.TestFramework$.sbt$TestFramework$$withContextLoader(TestFramework.scala:278)
	at sbt.TestFramework$$anon$3$$anonfun$$lessinit$greater$1.apply(TestFramework.scala:318)
	at sbt.TestFramework$$anon$3$$anonfun$$lessinit$greater$1.apply(TestFramework.scala:318)
	at sbt.TestFunction.apply(TestFramework.scala:330)
	at sbt.Tests$.$anonfun$toTask$1(Tests.scala:435)
	at sbt.std.Transform$$anon$3.$anonfun$apply$2(Transform.scala:46)
	at sbt.std.Transform$$anon$4.work(Transform.scala:68)
	at sbt.Execute.$anonfun$submit$2(Execute.scala:282)
	at sbt.internal.util.ErrorHandling$.wideConvert(ErrorHandling.scala:23)
	at sbt.Execute.work(Execute.scala:291)
	at sbt.Execute.$anonfun$submit$1(Execute.scala:282)
	at sbt.ConcurrentRestrictions$$anon$4.$anonfun$submitValid$1(ConcurrentRestrictions.scala:265)
	at sbt.CompletionService$$anon$2.call(CompletionService.scala:64)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
	at java.base/java.lang.Thread.run(Thread.java:832)
</failure>
                    </testcase><testcase classname="SweetTreatTest" name="selectTheCheapestCourier method in SweetTreat.scala should give invalid order when the list of courier is not valid" time="0.052">
                      
                    </testcase><testcase classname="SweetTreatTest" name="availableCouriersOrderedByPrice method in SweetTreat.scala should give a list of couriers sorted by cheapest to expensive when return an ordered list of available couriers" time="0.05">
                      
                    </testcase><testcase classname="SweetTreatTest" name="availableCouriersOrderedByPrice method in SweetTreat.scala should give invalid courier List when return an empty list" time="0.051">
                      
                    </testcase>
          <system-out><![CDATA[]]></system-out>
          <system-err><![CDATA[]]></system-err>
        </testsuite>